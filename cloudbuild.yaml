steps:
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - -c
      - docker pull gcr.io/$PROJECT_ID/${_IMAGE}:latest || exit 0

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - build
      - -t
      - gcr.io/$PROJECT_ID/${_IMAGE}:$TAG_NAME
      - -t
      - gcr.io/$PROJECT_ID/${_IMAGE}:latest
      - .

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - push
      - gcr.io/$PROJECT_ID/${_IMAGE}:$TAG_NAME

  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - --namespace=${_K8S_NS}
      - set
      - image
      - deployment
      - ${_DEPLOYMENT0}
      - stream=gcr.io/$PROJECT_ID/${_IMAGE}:$TAG_NAME
    env:
      - CLOUDSDK_COMPUTE_ZONE=${_ZONE}
      - CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}

  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - --namespace=${_K8S_NS}
      - set
      - image
      - deployment
      - ${_DEPLOYMENT1}
      - stream=gcr.io/$PROJECT_ID/${_IMAGE}:$TAG_NAME
    env:
      - CLOUDSDK_COMPUTE_ZONE=${_ZONE}
      - CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}

substitutions:
 _IMAGE: ethereum-etl
 _DEPLOYMENT0: ethereum-block-data-streaming-app-deployment
 _DEPLOYMENT1: ethereum-trace-data-streaming-app-deployment
 _ZONE: us-central1-b
 _CLUSTER_NAME: baas0
 _K8S_NS: dev-etl-0

images:
  - gcr.io/$PROJECT_ID/${_IMAGE}:$TAG_NAME
  - gcr.io/$PROJECT_ID/${_IMAGE}:latest
